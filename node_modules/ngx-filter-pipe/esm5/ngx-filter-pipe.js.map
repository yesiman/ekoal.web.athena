{
  "version": 3,
  "file": "ngx-filter-pipe.js",
  "sources": [
    "ng://ngx-filter-pipe/out/src/app/shared/ngx-filter-pipe/ngx-filter.module.ts",
    "ng://ngx-filter-pipe/out/src/app/shared/ngx-filter-pipe/ngx-filter.pipe.ts"
  ],
  "sourcesContent": [
    "/**\n * Created by vadimdez on 28/11/2016.\n */\nimport { NgModule } from '@angular/core';\nimport { FilterPipe } from './ngx-filter.pipe';\n\n@NgModule({\n  declarations: [FilterPipe],\n  providers: [FilterPipe],\n  exports: [FilterPipe]\n})\n\nexport class FilterPipeModule {}\n",
    "/**\n * Created by vadimdez on 28/06/16.\n */\nimport { Pipe, Injectable, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterBy',\n  pure: false\n})\n\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n\n  private filterByString(filter) {\n    if (filter) {\n      filter = filter.toLowerCase();\n    }\n    return value => {\n      return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n  }\n\n  private filterByBoolean(filter) {\n    return value => {\n      return Boolean(value) === filter;\n    }\n  }\n\n  private filterByObject(filter) {\n    return value => {\n      for (let key in filter) {\n\n        if (key === '$or') {\n          if (!this.filterByOr(filter.$or)(this.getValue(value))) {\n            return false;\n          }\n          continue;\n        }\n\n        let walker = value;\n        let found = false;\n        do {\n          if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n            found = true;\n            break;\n          }\n        } while (walker = Object.getPrototypeOf(walker));\n\n        if (!found) {\n          return false;\n        }\n\n        let val = this.getValue(value[key]);\n        const filterType = typeof filter[key];\n        let isMatching;\n\n        if (filterType === 'boolean') {\n          isMatching = this.filterByBoolean(filter[key])(val);\n        } else if (filterType === 'string') {\n          isMatching = this.filterByString(filter[key])(val);\n        } else if (filterType === 'object') {\n          isMatching = this.filterByObject(filter[key])(val);\n        } else {\n          isMatching = this.filterDefault(filter[key])(val);\n        }\n\n        if (!isMatching) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  /**\n   * Filter value by $or\n   */\n  private filterByOr(filter: any[]): (value: any) => boolean {\n    return (value: any) => {\n      let hasMatch = false;\n      const length = filter.length;\n\n      const arrayComparison = (i) => {\n        return value.indexOf(filter[i]) !== -1;\n      };\n      const otherComparison = (i) => {\n        return value === filter[i];\n      };\n      const comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n\n      for (let i = 0; i < length; i++) {\n        if (comparison(i)) {\n          hasMatch = true;\n          break;\n        }\n      }\n\n      return hasMatch;\n    };\n  }\n\n  /**\n   * Checks function's value if type is function otherwise same value\n   */\n  private getValue(value: any): any {\n    return typeof value === 'function' ? value() : value;\n  }\n\n  /**\n   * Defatul filterDefault function\n   */\n  private filterDefault(filter: any): (value: any) => boolean {\n    return (value: any) => {\n      return filter === undefined || filter == value;\n    }\n  }\n\n  private isNumber(value) {\n    return !isNaN(parseInt(value, 10)) && isFinite(value);\n  }\n\n  transform(array: any[], filter: any): any {\n    const type = typeof filter;\n\n    if (!array) {\n      return array;\n    }\n\n    if (type === 'boolean') {\n      return array.filter(this.filterByBoolean(filter));\n    }\n\n    if (type === 'string') {\n      if (this.isNumber(filter)) {\n        return array.filter(this.filterDefault(filter));\n      }\n\n      return array.filter(this.filterByString(filter));\n    }\n\n    if (type === 'object') {\n      return array.filter(this.filterByObject(filter));\n    }\n\n    if (type === 'function') {\n      return array.filter(filter);\n    }\n\n    return array.filter(this.filterDefault(filter));\n  }\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;ACGA,AAQA,MAAA,UAAA,CAAA;;;;;IAEU,cAAc,CAAC,MAAM,EAA/B;QACI,IAAI,MAAM,EAAE;YACV,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;SAC/B;QACD,OAAO,KAAK,IAAhB;YACM,OAAO,CAAC,MAAM,KAAK,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK,EAAE,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;SACvF,CAAA;;;;;;IAGK,eAAe,CAAC,MAAM,EAAhC;QACI,OAAO,KAAK,IAAhB;YACM,OAAO,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC;SAClC,CAAA;;;;;;IAGK,cAAc,CAAC,MAAM,EAA/B;QACI,OAAO,KAAK,IAAhB;YACM,KAAK,qBAAI,GAAG,IAAI,MAAM,EAAE;gBAEtB,IAAI,GAAG,KAAK,KAAK,EAAE;oBACjB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;wBACtD,OAAO,KAAK,CAAC;qBACd;oBACD,SAAS;iBACV;gBAED,qBAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,qBAAI,KAAK,GAAG,KAAK,CAAC;gBAClB,GAAG;oBACD,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;wBAC9E,KAAK,GAAG,IAAI,CAAC;wBACb,MAAM;qBACP;iBACF,QAAQ,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;gBAEjD,IAAI,CAAC,KAAK,EAAE;oBACV,OAAO,KAAK,CAAC;iBACd;gBAED,qBAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpC,uBAAM,UAAU,GAAG,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtC,qBAAI,UAAU,CAAC;gBAEf,IAAI,UAAU,KAAK,SAAS,EAAE;oBAC5B,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACrD;qBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;oBAClC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACpD;qBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;oBAClC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACpD;qBAAM;oBACL,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACnD;gBAED,IAAI,CAAC,UAAU,EAAE;oBACf,OAAO,KAAK,CAAC;iBACd;aACF;YAED,OAAO,IAAI,CAAC;SACb,CAAA;;;;;;;IAMK,UAAU,CAAC,MAAa,EAAlC;QACI,OAAO,CAAC,KAAU,KAAtB;YACM,qBAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,uBAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAE7B,uBAAM,eAAe,GAAG,CAAC,CAAC,KAAhC;gBACQ,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aACxC,CAAC;YACF,uBAAM,eAAe,GAAG,CAAC,CAAC,KAAhC;gBACQ,OAAO,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;aAC5B,CAAC;YACF,uBAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,eAAe,GAAG,eAAe,CAAC;YAE5E,KAAK,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;oBACjB,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM;iBACP;aACF;YAED,OAAO,QAAQ,CAAC;SACjB,CAAC;;;;;;;IAMI,QAAQ,CAAC,KAAU,EAA7B;QACI,OAAO,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC;;;;;;;IAM/C,aAAa,CAAC,MAAW,EAAnC;QACI,OAAO,CAAC,KAAU,KAAtB;YACM,OAAO,MAAM,KAAK,SAAS,IAAI,MAAM,IAAI,KAAK,CAAC;SAChD,CAAA;;;;;;IAGK,QAAQ,CAAC,KAAK,EAAxB;QACI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;;;;;;;IAGxD,SAAS,CAAC,KAAY,EAAE,MAAW,EAArC;QACI,uBAAM,IAAI,GAAG,OAAO,MAAM,CAAC;QAE3B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;SACnD;QAED,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACzB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;aACjD;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;SAClD;QAED,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;SAClD;QAED,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC7B;QAED,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;KACjD;;;IAjJH,EAAA,IAAA,EAAC,IAAI,EAAL,IAAA,EAAA,CAAM;gBACJ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,KAAK;aACZ,EAAD,EAAA;IAEA,EAAA,IAAA,EAAC,UAAU,EAAX;;;;;;;;;ADPA,AASA,MAAA,gBAAA,CAAA;;;IANA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,YAAY,EAAE,CAAC,UAAU,CAAC;gBAC1B,SAAS,EAAE,CAAC,UAAU,CAAC;gBACvB,OAAO,EAAE,CAAC,UAAU,CAAC;aACtB,EAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;"
}

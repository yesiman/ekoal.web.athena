{
  "_args": [
    [
      {
        "raw": "promisify-call@^2.0.2",
        "scope": null,
        "escapedName": "promisify-call",
        "name": "promisify-call",
        "rawSpec": "^2.0.2",
        "spec": ">=2.0.2 <3.0.0",
        "type": "range"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/mailgun-js"
    ]
  ],
  "_from": "promisify-call@>=2.0.2 <3.0.0",
  "_id": "promisify-call@2.0.4",
  "_inCache": true,
  "_location": "/promisify-call",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/promisify-call-2.0.4.tgz_1484587099758_0.4257927821017802"
  },
  "_npmUser": {
    "name": "bojand",
    "email": "dbojan@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promisify-call@^2.0.2",
    "scope": null,
    "escapedName": "promisify-call",
    "name": "promisify-call",
    "rawSpec": "^2.0.2",
    "spec": ">=2.0.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mailgun-js"
  ],
  "_resolved": "https://registry.npmjs.org/promisify-call/-/promisify-call-2.0.4.tgz",
  "_shasum": "d48c2d45652ccccd52801ddecbd533a6d4bd5fba",
  "_shrinkwrap": null,
  "_spec": "promisify-call@^2.0.2",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/mailgun-js",
  "author": {
    "name": "Bojan Djurkovic",
    "email": "dbojan@gmail.com"
  },
  "ava": {
    "files": [
      "test/*.test.js"
    ]
  },
  "bugs": {
    "url": "https://github.com/bojand/promisify-call/issues"
  },
  "dependencies": {
    "with-callback": "^1.0.2"
  },
  "description": "Promisify a function call so users can call a function with a callback or get a promise",
  "devDependencies": {
    "ava": "^0.17.0",
    "babel-eslint": "^7.1.1",
    "jsdoc-to-markdown": "^2.0.1",
    "standard": "^8.5.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "d48c2d45652ccccd52801ddecbd533a6d4bd5fba",
    "tarball": "https://registry.npmjs.org/promisify-call/-/promisify-call-2.0.4.tgz"
  },
  "engines": {
    "node": ">=4.0"
  },
  "gitHead": "0b36cfdbca45a5593d18d6f024cbb02b356a47b0",
  "homepage": "https://github.com/bojand/promisify-call#readme",
  "keywords": [
    "promise",
    "callback",
    "promisify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "bojand",
      "email": "dbojan@gmail.com"
    }
  ],
  "name": "promisify-call",
  "optionalDependencies": {},
  "readme": "# promisify-call\n\n[![npm version](https://img.shields.io/npm/v/promisify-call.svg?style=flat-square)](https://www.npmjs.com/package/promisify-call)\n[![build status](https://img.shields.io/travis/bojand/promisify-call/master.svg?style=flat-square)](https://travis-ci.org/bojand/promisify-call)\n\nPromisify a function call so users can call a function with a callback or get a promise.\n* **2.0** works only with native `Promise` so requires Node >= 4.0.\n* **1.0** uses [Bluebird](www.bluebirdjs.com) and should work with older Node.js\n\n## Installation\n\n`npm install promisify-call`\n\n## Usage\n\n```js\nfunction _uppercase(param, fn) {\n  setTimeout(() => {\n    return fn(null, param.toUpperCase());\n  }, 50);\n}\n\nfunction uppercase(param, fn) {\n  return promisifyCall(this, _uppercase, ...arguments);\n}\n\n// now we can call it using callback-style\nuppercase('foo', (err, res) => {\n  console.log(res); // FOO\n});\n\n// OR promise style\nconst res = await uppercase('foo');\nconsole.log(res); // FOO\n```\n\n## API Reference\n\n<a name=\"promisifyCall\"></a>\n\n### promisifyCall(ctx, fn, args) â‡’ <code>undefined</code> &#124; <code>\\*</code> &#124; <code>Promise</code>\nPromisifies the call to <code>fn</code> if appropriate given the arguments.\nCalls the function <code>fn</code> either using callback style if last argument is a function.\nIf last argument is not a function, <code>fn</code> is called returning a promise.\nThis lets you create API that can be called in either fashions.\n\n**Kind**: global function  \n**Returns**: <code>undefined</code> &#124; <code>\\*</code> &#124; <code>Promise</code> - Promise if promisified  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| ctx | <code>Object</code> | context / this |\n| fn | <code>function</code> | The function to call |\n| args | <code>arguments</code> | Arguments |\n\n## License\n\nCopyright 2015 Bojan D.\n\nLicensed under the MIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bojand/promisify-call.git"
  },
  "scripts": {
    "docs": "jsdoc2md \"index.js\" --heading-depth 3 --template readme.hbs > README.md",
    "test": "ava -v"
  },
  "standard": {
    "parser": "babel-eslint"
  },
  "version": "2.0.4"
}

{
  "_args": [
    [
      {
        "raw": "cache-loader@^1.2.2",
        "scope": null,
        "escapedName": "cache-loader",
        "name": "cache-loader",
        "rawSpec": "^1.2.2",
        "spec": ">=1.2.2 <2.0.0",
        "type": "range"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/@angular-devkit/build-angular"
    ]
  ],
  "_from": "cache-loader@>=1.2.2 <2.0.0",
  "_id": "cache-loader@1.2.2",
  "_inCache": true,
  "_location": "/cache-loader",
  "_nodeVersion": "9.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cache-loader_1.2.2_1519766317509_0.3657868698476898"
  },
  "_npmUser": {
    "name": "michael-ciniawsky",
    "email": "michael.ciniawsky@gmail.com"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cache-loader@^1.2.2",
    "scope": null,
    "escapedName": "cache-loader",
    "name": "cache-loader",
    "rawSpec": "^1.2.2",
    "spec": ">=1.2.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular-devkit/build-angular"
  ],
  "_resolved": "https://registry.npmjs.org/cache-loader/-/cache-loader-1.2.2.tgz",
  "_shasum": "6d5c38ded959a09cc5d58190ab5af6f73bd353f5",
  "_shrinkwrap": null,
  "_spec": "cache-loader@^1.2.2",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/@angular-devkit/build-angular",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/cache-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^1.1.0",
    "mkdirp": "^0.5.1",
    "neo-async": "^2.5.0",
    "schema-utils": "^0.4.2"
  },
  "description": "Caches the result of following loaders on disk.",
  "devDependencies": {
    "babel-cli": "^6.0.0",
    "babel-jest": "^21.0.0",
    "babel-plugin-transform-object-rest-spread": "^6.0.0",
    "babel-polyfill": "^6.0.0",
    "babel-preset-env": "^1.6.0",
    "cross-env": "^5.0.0",
    "del-cli": "^1.0.0",
    "eslint": "^4.0.0",
    "eslint-config-webpack": "^1.0.0",
    "eslint-plugin-import": "^2.0.0",
    "jest": "^21.0.0",
    "lint-staged": "^5.0.0",
    "nsp": "^2.0.0",
    "pre-commit": "^1.0.0",
    "standard-version": "^4.0.0",
    "webpack": "^3.0.0",
    "webpack-defaults": "^1.6.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-rsGh4SIYyB9glU+d0OcHwiXHXBoUgDhHZaQ1KAbiXqfz1CDPxtTboh1gPbJ0q2qdO8a9lfcjgC5CJ2Ms32y5bw==",
    "shasum": "6d5c38ded959a09cc5d58190ab5af6f73bd353f5",
    "tarball": "https://registry.npmjs.org/cache-loader/-/cache-loader-1.2.2.tgz",
    "fileCount": 7,
    "unpackedSize": 18475
  },
  "engines": {
    "node": ">= 4.8 < 5.0.0 || >= 5.10"
  },
  "files": [
    "dist"
  ],
  "gitHead": "ebd53aadf56dfae269fa44e3cb25ec37c1aea9f1",
  "homepage": "https://github.com/webpack-contrib/cache-loader",
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "cache-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
  },
  "pre-commit": "lint-staged",
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n  <h1>Cache Loader</h1>\n  <p>Caches the result of following loaders on disk (default) or in the database</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install --save-dev cache-loader\n```\n\n<h2 align=\"center\">Usage</h2>\n\nAdd this loader in front of other (expensive) loaders to cache the result on disk.\n\n**webpack.config.js**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ext$/,\n        use: [\n          'cache-loader',\n          ...loaders\n        ],\n        include: path.resolve('src')\n      }\n    ]\n  }\n}\n```\n\n> ⚠️ Note that there is an overhead for saving the reading and saving the cache file, so only use this loader to cache expensive loaders.\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`cacheKey`**|`{Function(options, request) -> {String}}`|`undefined`|Allows you to override default cache key generator|\n|**`cacheDirectory`**|`{String}`|`path.resolve('.cache-loader')`|Provide a cache directory where cache items should be stored (used for default read/write implementation)|\n|**`cacheIdentifier`**|`{String}`|`cache-loader:{version} {process.env.NODE_ENV}`|Provide an invalidation identifier which is used to generate the hashes. You can use it for extra dependencies of loaders (used for default read/write implementation)|\n|**`write`**|`{Function(cacheKey, data, callback) -> {void}}`|`undefined`|Allows you to override default write cache data to file (e.g. Redis, memcached)|\n|**`read`**|`{Function(cacheKey, callback) -> {void}}`|`undefined`|Allows you to override default read cache data from file|\n\n<h2 align=\"center\">Examples</h2>\n\n**webpack.config.js**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          'cache-loader',\n          'babel-loader'\n        ],\n        include: path.resolve('src')\n      }\n    ]\n  }\n}\n```\n\n### `Database Integration`\n\n**webpack.config.js**\n```js\n// Or different database client - memcached, mongodb, ...\nconst redis = require('redis');\nconst crypto = require('crypto');\n\n// ...\n// connect to client\n// ...\n\nconst BUILD_CACHE_TIMEOUT = 24 * 3600; // 1 day\n\nfunction digest(str) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n\n// Generate own cache key\nfunction cacheKey(options, request) {\n  return `build:cache:${digest(request)}`;\n}\n\n\n// Read data from database and parse them\nfunction read(key, callback) {\n  client.get(key, (err, result) => {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!result) {\n      return callback(new Error(`Key ${key} not found`));\n    }\n\n    try {\n      let data = JSON.parse(result);\n      callback(null, data);\n    } catch (e) {\n      callback(e);\n    }\n  });\n}\n\n\n// Write data to database under cacheKey\nfunction write(key, data, callback) {\n  client.set(key, JSON.stringify(data), 'EX', BUILD_CACHE_TIMEOUT, callback);\n}\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'cache-loader',\n            options: {\n              cacheKey,\n              read,\n              write,\n            }\n          },\n          'babel-loader'\n        ],\n        include: path.resolve('src')\n      }\n    ]\n  }\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/sokra\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/sokra.png?size=150\">\n          </br>\n          Tobias Koppers\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/bebraw\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/bebraw.png?v=3&s=150\">\n          </br>\n          Juho Vepsäläinen\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/d3viant0ne\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/evilebottnawi\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/cache-loader.svg\n[npm-url]: https://npmjs.com/package/cache-loader\n\n[node]: https://img.shields.io/node/v/cache-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/cache-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/cache-loader\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[test]: http://img.shields.io/travis/webpack-contrib/cache-loader.svg\n[test-url]: https://travis-ci.org/webpack-contrib/cache-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/cache-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/cache-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/cache-loader.git"
  },
  "scripts": {
    "appveyor:test": "npm run test",
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
    "clean": "del-cli dist",
    "defaults": "webpack-defaults",
    "lint": "eslint --cache src test",
    "lint-staged": "lint-staged",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "release": "standard-version",
    "security": "nsp check",
    "start": "npm run build -- -w",
    "test": "jest",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:watch": "jest --watch",
    "travis:coverage": "npm run test:coverage -- --runInBand",
    "travis:lint": "npm run lint && npm run security",
    "travis:test": "npm run test -- --runInBand"
  },
  "version": "1.2.2"
}

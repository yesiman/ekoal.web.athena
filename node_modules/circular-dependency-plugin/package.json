{
  "_args": [
    [
      {
        "raw": "circular-dependency-plugin@^5.0.2",
        "scope": null,
        "escapedName": "circular-dependency-plugin",
        "name": "circular-dependency-plugin",
        "rawSpec": "^5.0.2",
        "spec": ">=5.0.2 <6.0.0",
        "type": "range"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/@angular-devkit/build-angular"
    ]
  ],
  "_from": "circular-dependency-plugin@>=5.0.2 <6.0.0",
  "_id": "circular-dependency-plugin@5.0.2",
  "_inCache": true,
  "_location": "/circular-dependency-plugin",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/circular-dependency-plugin_5.0.2_1523581349163_0.22148776264838888"
  },
  "_npmUser": {
    "name": "theron",
    "email": "theron17@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "circular-dependency-plugin@^5.0.2",
    "scope": null,
    "escapedName": "circular-dependency-plugin",
    "name": "circular-dependency-plugin",
    "rawSpec": "^5.0.2",
    "spec": ">=5.0.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular-devkit/build-angular"
  ],
  "_resolved": "https://registry.npmjs.org/circular-dependency-plugin/-/circular-dependency-plugin-5.0.2.tgz",
  "_shasum": "da168c0b37e7b43563fb9f912c1c007c213389ef",
  "_shrinkwrap": null,
  "_spec": "circular-dependency-plugin@^5.0.2",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/@angular-devkit/build-angular",
  "author": "",
  "bugs": {
    "url": "https://github.com/aackerman/circular-dependency-plugin/issues"
  },
  "dependencies": {},
  "description": "Detect modules with circular dependencies when bundling with webpack.",
  "devDependencies": {
    "jest": "^22.4.2",
    "memory-fs": "^0.4.1",
    "webpack": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-oC7/DVAyfcY3UWKm0sN/oVoDedQDQiw/vIiAnuTWTpE5s0zWf7l3WY417Xw/Fbi/QbAjctAkxgMiS9P0s3zkmA==",
    "shasum": "da168c0b37e7b43563fb9f912c1c007c213389ef",
    "tarball": "https://registry.npmjs.org/circular-dependency-plugin/-/circular-dependency-plugin-5.0.2.tgz",
    "fileCount": 5,
    "unpackedSize": 8691
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "b563ee1a20bc1d759b71c9908099bc4d0920dff0",
  "homepage": "https://github.com/aackerman/circular-dependency-plugin#readme",
  "jest": {
    "testMatch": [
      "**/?(*.)(spec|test).js?(x)"
    ]
  },
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "theron",
      "email": "theron17@gmail.com"
    }
  ],
  "name": "circular-dependency-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": ">=4.0.1"
  },
  "readme": "## Circular Dependency Plugin\n\nDetect modules with circular dependencies when bundling with webpack.\n\nCircular dependencies are often a necessity in complex software, the presence of a circular dependency doesn't always imply a bug, but in the case where you believe a bug exists, this module may help find it.\n\n### Webpack Versions\n\nThe latest major version of this plugin `5`, supports webpack `4.0.1` and greater as a peer dependency. Major version `4` of this plugin and below are intended to support webpack `3.x.x` and below as a peer dependency.\n\n### Basic Usage\n\n```js\n// webpack.config.js\nconst CircularDependencyPlugin = require('circular-dependency-plugin')\n\nmodule.exports = {\n  entry: \"./src/index\",\n  plugins: [\n    new CircularDependencyPlugin({\n      // exclude detection of files based on a RegExp\n      exclude: /a\\.js|node_modules/,\n      // add errors to webpack instead of warnings\n      failOnError: true,\n      // set the current working directory for displaying module paths\n      cwd: process.cwd(),\n    })\n  ]\n}\n```\n\n### Advanced Usage\n\n```js\n// webpack.config.js\nconst CircularDependencyPlugin = require('circular-dependency-plugin')\n\nmodule.exports = {\n  entry: \"./src/index\",\n  plugins: [\n    new CircularDependencyPlugin({\n      // `onStart` is called before the cycle detection starts\n      onStart({ compilation }) {\n        console.log('start detecting webpack modules cycles');\n      },\n      // `onDetected` is called for each module that is cyclical\n      onDetected({ module: webpackModuleRecord, paths, compilation }) {\n        // `paths` will be an Array of the relative module paths that make up the cycle\n        // `module` will be the module record generated by webpack that caused the cycle\n        compilation.errors.push(new Error(paths.join(' -> ')))\n      },\n      // `onEnd` is called before the cycle detection ends\n      onEnd({ compilation }) {\n        console.log('end detecting webpack modules cycles');\n      },\n    })\n  ]\n}\n```\n\nIf you have some number of cycles and want to fail if any new ones are\nintroduced, you can use the life cycle methods to count and fail when the\ncount is exceeded. (Note if you care about detecting a cycle being replaced by\nanother, this won't catch that.)\n\n```js\n// webpack.config.js\nconst CircularDependencyPlugin = require('circular-dependency-plugin')\n\nconst MAX_CYCLES = 5;\nlet numCyclesDetected = 0;\n\nmodule.exports = {\n  entry: \"./src/index\",\n  plugins: [\n    new CircularDependencyPlugin({\n      onStart({ compilation }) {\n        numCyclesDetected = 0;\n      },\n      onDetected({ module: webpackModuleRecord, paths, compilation }) {\n        numCyclesDetected++;\n        compilation.warnings.push(new Error(paths.join(' -> ')))\n      },\n      onEnd({ compilation }) {\n        if (numCyclesDetected > MAX_CYCLES) {\n          compilation.errors.push(new Error(\n            `Detected ${numCyclesDetected} cycles which exceeds configured limit of ${MAX_CYCLES}`\n          ));\n        }\n      },\n    })\n  ]\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aackerman/circular-dependency-plugin.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "5.0.2"
}

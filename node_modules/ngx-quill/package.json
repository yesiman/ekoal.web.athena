{
  "_args": [
    [
      {
        "raw": "ngx-quill@3.1.0",
        "scope": null,
        "escapedName": "ngx-quill",
        "name": "ngx-quill",
        "rawSpec": "3.1.0",
        "spec": "3.1.0",
        "type": "version"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena"
    ]
  ],
  "_from": "ngx-quill@3.1.0",
  "_id": "ngx-quill@3.1.0",
  "_inCache": true,
  "_location": "/ngx-quill",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ngx-quill_3.1.0_1525858935166_0.5045811018267385"
  },
  "_npmUser": {
    "name": "killercodemonkey",
    "email": "bengtler@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngx-quill@3.1.0",
    "scope": null,
    "escapedName": "ngx-quill",
    "name": "ngx-quill",
    "rawSpec": "3.1.0",
    "spec": "3.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ngx-quill/-/ngx-quill-3.1.0.tgz",
  "_shasum": "5f539c759be8cafd122c038df4eb5be838c7c2f5",
  "_shrinkwrap": null,
  "_spec": "ngx-quill@3.1.0",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena",
  "author": {
    "name": "Bengt Weiße"
  },
  "bugs": {
    "url": "https://github.com/KillerCodeMonkey/ngx-quill/issues"
  },
  "contributors": [
    {
      "name": "Bengt Weiße"
    }
  ],
  "dependencies": {
    "@types/quill": "1.3.3",
    "quill": "^1.3.6"
  },
  "description": "An angular (>= v2) component for the easy use of the QuillJS richt text editor.",
  "devDependencies": {
    "@angular/common": "^5.0.0 || ^6.0.0",
    "@angular/compiler": "^5.0.0 || ^6.0.0",
    "@angular/compiler-cli": "^5.0.0 || ^6.0.0",
    "@angular/core": "^5.0.0 || ^6.0.0",
    "@angular/forms": "^5.0.0 || ^6.0.0",
    "@angular/platform-browser": "^5.0.0 || ^6.0.0",
    "@angular/platform-browser-dynamic": "^5.0.0 || ^6.0.0",
    "@types/jasmine": "^2.8.7",
    "@types/node": "^10.0.6",
    "ajv": "^6.0.0",
    "codelyzer": "^4.3.0",
    "core-js": "^2.5.6",
    "istanbul-instrumenter-loader": "^3.0.1",
    "jasmine-core": "^3.1.0",
    "karma": "^2.0.2",
    "karma-coverage": "^1.1.2",
    "karma-coverage-istanbul-reporter": "^1.4.2",
    "karma-jasmine": "^1.1.2",
    "karma-mocha-reporter": "^2.2.5",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^3.0.0",
    "loader-utils": "^1.1.0",
    "reflect-metadata": "^0.1.12",
    "rxjs": "^5.5.2 || ^6.1.0",
    "source-map-loader": "^0.2.3",
    "ts-helpers": "^1.1.2",
    "ts-loader": "4.3.0",
    "tslint": "^4.0.0 || ^5.10.0",
    "typescript": ">=2.4.2 || <2.8",
    "webpack": "^4.8.1",
    "webpack-cli": "^2.1.3",
    "webpack-node-externals": "^1.7.2",
    "zone.js": "^0.8.26"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-xA1pk+/pYlu7DlfyOOefyReYEaDmEwl7ZFUSM5gNyZogADeHQ5gWZZQ1jIUczrbcc2moq/mqqgeaMuUc9FJA0A==",
    "shasum": "5f539c759be8cafd122c038df4eb5be838c7c2f5",
    "tarball": "https://registry.npmjs.org/ngx-quill/-/ngx-quill-3.1.0.tgz",
    "fileCount": 27,
    "unpackedSize": 112869,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8sJ4CRA9TVsSAnZWagAAv8AQAKJeIWug/IR50+yy2efQ\ntNMJdXt/7aQsT0O0dw/clTC5UPmVdKpeIqkoymki6bGH05hkweVJ0YyF4CTt\nUtgXkq8g2TGAMk96CE1AKhjY8QF0v3F7kv1LpTcYONuRObLBeznNoM8Zw6ho\nMCx+s3iBYI41zZyPZfWLNQmTSNZqzFQsodgSloFDHRRtXeZHj7GSRcpZRZ1e\ninSzDxhNQmt0AQVr3h4oypivP/dPA05RioWazJ8jSXV2kMW7nrB32D5mULfo\n+ao9fcoi6JTtLdwg/wUwAO1/RGJwSqXNpE30ENEOrkWfYb5EXD6wqVpwB/5s\npYgwAwyQVVaj8MAd0POzfakSzzFT3IFFo+QQYGZB2s6JqD5Lu6b7NXRQjyjb\ntXkKGK1GufQzqM95drPnXaMBHV1AynIUKJCqvl5X92OtYCY6wksW99uSVjDD\nPQc8L8ZqzXioluQFMaN7uEZ7s9fzt5ZMERaX2fnhP0OwyFKw/BoNY6zM8y25\nTs41N3syH8BRtro6qp1IGtPLnv/zBRROTAhXX26yc/UqKQ+utX+2XPNY0UPZ\n50KndA10Fe5fgAyEkhC94soErVN+fKqreS5g9m2vuGZy9oRILlMwzda0JR3Z\ntCQuBpDJmeJWlkaT+3FhIkSI8hFtGy0GP9vyaeQ349GZnCh6BWywIDKMpQ2i\nXT9O\r\n=97RC\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8"
  },
  "homepage": "https://github.com/KillerCodeMonkey/ngx-quill",
  "keywords": [
    "editor",
    "rich text",
    "wysiwyg",
    "angular",
    "directive",
    "component",
    "quill",
    "quilljs",
    "angular 2",
    "angular",
    "text editor"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "killercodemonkey",
      "email": "bengtler@gmail.com"
    }
  ],
  "name": "ngx-quill",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^5.0.0 || ^6.0.0",
    "@angular/forms": "^5.0.0 || ^6.0.0",
    "rxjs": "^5.5.2 || ^6.1.0"
  },
  "readme": "# ngx-quill [![Build Status](https://travis-ci.org/KillerCodeMonkey/ngx-quill.svg?branch=develop)](https://travis-ci.org/KillerCodeMonkey/ngx-quill)\n\nAngular (>=2) component for rich text editor Quill\n\n- angular v4 - ngx-quill <=1.6.0\n- angular v5 - ngx-quill > 1.6.0\n- angular v6 - ngx-quill >= 3.0.0\n\n<img src=\"https://cloud.githubusercontent.com/assets/2264672/20601381/a51753d4-b258-11e6-92c2-1d79efa5bede.png\" width=\"200px\">\n\nngx-quill is the new angular (>=2) implementation of ngQuill.\n\n## Examples\n- [demo-page](https://killercodemonkey.github.io/ngx-quill-example)\n- [example-repo](https://github.com/killerCodeMonkey/ngx-quill-example)\n\n\n## Installation\n- `npm install ngx-quill`\n- for projects using Angular < v5.0.0 install `npm install ngx-quill@1.6.0`\n- include theme stylings: bubble.css, snow.css of quilljs in your index.html\n\n### For standard webpack and tsc builds\n- import `QuillModule` from `ngx-quill`:\n```\nimport { QuillModule } from 'ngx-quill'\n```\n- add `QuillModule` to the imports of your NgModule:\n```\n@NgModule({\n  imports: [\n    ...,\n\n    QuillModule\n  ],\n  ...\n})\nclass YourModule { ... }\n```\n- use `<quill-editor></quill-editor>` in your templates to add a default quill editor\n- do not forget to include quill + theme css in your buildprocess, module or index.html!\n\n### For SystemJS builds (Config)\n- add quill and ngx-quill to your `paths`:\n```\npaths: {\n  ...\n  'ngx-quill': 'node_modules/ngx-quill/bundles/ngx-quill.umd.js',\n  'quill': 'node_modules/quill/dist/quill.js'\n}\n```\n- set format and dependencies in `packages`:\n```\npackages: {\n  'ngx-quill': {\n    format: 'cjs',\n    meta: {\n      deps: ['quill']\n    }\n  },\n  'quill': {\n    format: 'cjs'\n  }\n}\n```\n- follow the steps of **For standard webpack and tsc builds**\n\n## Config\n- ngModel - set initial value or allow two-way databinding\n- readOnly (true | false) if user can edit content\n- formats - array of allowed formats/groupings\n- modules - configure/disable quill modules, e.g toolbar or add custom toolbar via html element default is\n```\n{\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n    ['blockquote', 'code-block'],\n\n    [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\n    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n    [{ 'direction': 'rtl' }],                         // text direction\n\n    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\n    [{ 'font': [] }],\n    [{ 'align': [] }],\n\n    ['clean'],                                         // remove formatting button\n\n    ['link', 'image', 'video']                         // link and image, video\n  ]\n};\n```\n- theme - bubble/snow, default is `snow`\n- style - set a style object, e.g. `[style]=\"{height: '250px'}\"\n- placeholder - placeholder text, default is `Insert text here ...`\n- bounds - boundary of the editor, default `document.body`, pass 'self' to attach the editor element\n- maxLength - add valdiation for maxlength - set model state to `invalid` and add `ng-invalid` class\n- minLength - add valdiation for minlength - set model state to `invalid` and add `ng-invalid` class, only set invalid if editor text not empty --> if you want to check if text is required --> use the required attribute\n- required - add validation as a required field - `[required]=\"true\"` - default: false, boolean expected (no strings!)\n- strict - default: true, sets editor in strict mode\n- scrollingContainer - default '.ql-editor', allows to set scrolling container\n- use custom-options for adding for example custom font sizes (see example in demo.html) --> this overwrites this options **globally** !!!\n- possbility to create a custom toolbar via projection slot `[quill-editor-toolbar]`:\n```\n<quill-editor>\n  <div quill-editor-toolbar>\n    <span class=\"ql-formats\">\n      <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n    </span>\n    <span class=\"ql-formats\">\n      <select class=\"ql-align\" [title]=\"'Aligment'\">\n        <option selected></option>\n        <option value=\"center\"></option>\n        <option value=\"right\"></option>\n        <option value=\"justify\"></option>\n      </select>\n      <select class=\"ql-align\" [title]=\"'Aligment2'\">\n        <option selected></option>\n        <option value=\"center\"></option>\n        <option value=\"right\"></option>\n        <option value=\"justify\"></option>\n      </select>\n    </span>\n  </div>\n</quill-editor>\n```\n\n## Outputs\n- onEditorCreated - editor instance\n```\neditor\n```\n- onContentChanged - text is updated\n```\n{\n  editor: editorInstance,\n  html: html,\n  text: text,\n  delta: delta,\n  oldDelta: oldDelta,\n  source: source\n}\n```\n- onSelectionChanged - selection is updated\n```\n{\n  editor: editorInstance,\n  range: range,\n  oldRange: oldRange,\n  source: source\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KillerCodeMonkey/ngx-quill.git"
  },
  "scripts": {
    "build": "rm -rf ./dist && tsc && npm run bundle && npm run build:aot && npm run copyStaticToDist",
    "build:aot": "rm -rf aot && node_modules/.bin/ngc -p tsconfig-aot.json && rm -rf ./dist/aot/node_modules",
    "bundle": "webpack --display-error-details --mode development && cp dist/bundles/ngx-quill.umd.js dist/bundles/index.js",
    "copyStaticToDist": "cp ./package.json ./dist && cp ./README.md ./dist && cp ./LICENSE.txt ./dist",
    "lint": "tslint --force \"src/**/*.ts\"",
    "pretest": "npm run lint",
    "test": "karma start"
  },
  "typings": "index.d.ts",
  "version": "3.1.0"
}

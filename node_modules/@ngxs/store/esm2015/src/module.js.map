{
  "version": 3,
  "file": "module.js",
  "sources": [
    "ng://@ngxs/store/packages/store/src/module.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders, Optional, Inject, InjectionToken } from '@angular/core';\n\nimport { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN, NgxsConfig } from './symbols';\nimport { StateFactory } from './state-factory';\nimport { StateContextFactory } from './state-context-factory';\nimport { Actions, InternalActions } from './actions-stream';\nimport { InternalDispatcher, InternalDispatchedActionResults } from './dispatcher';\nimport { InternalStateOperations } from './state-operations';\nimport { Store } from './store';\nimport { SelectFactory } from './select';\nimport { StateStream } from './state-stream';\nimport { PluginManager } from './plugin-manager';\nimport { InitState, UpdateState } from './actions';\n\n/**\n * Root module\n * @ignore\n */\n@NgModule()\nexport class NgxsRootModule {\n  constructor(\n    factory: StateFactory,\n    internalStateOperations: InternalStateOperations,\n    store: Store,\n    select: SelectFactory,\n    @Optional()\n    @Inject(ROOT_STATE_TOKEN)\n    states: any[]\n  ) {\n    // add stores to the state graph and return their defaults\n    const results = factory.addAndReturnDefaults(states);\n\n    const stateOperations = internalStateOperations.getRootStateOperations();\n    if (results) {\n      // get our current stream\n      const cur = stateOperations.getState();\n\n      // set the state to the current + new\n      stateOperations.setState({ ...cur, ...results.defaults });\n    }\n\n    // connect our actions stream\n    factory.connectActionHandlers();\n\n    // dispatch the init action and invoke init function after\n    stateOperations.dispatch(new InitState()).subscribe(() => {\n      if (results) {\n        factory.invokeInit(results.states);\n      }\n    });\n  }\n}\n\n/**\n * Feature module\n * @ignore\n */\n@NgModule({})\nexport class NgxsFeatureModule {\n  constructor(\n    store: Store,\n    internalStateOperations: InternalStateOperations,\n    factory: StateFactory,\n    @Optional()\n    @Inject(FEATURE_STATE_TOKEN)\n    states: any[][]\n  ) {\n    // Since FEATURE_STATE_TOKEN is a multi token, we need to\n    // flatten it [[Feature1State, Feature2State], [Feature3State]]\n    const flattenedStates = ([] as any[]).concat(...states);\n\n    // add stores to the state graph and return their defaults\n    const results = factory.addAndReturnDefaults(flattenedStates);\n\n    const stateOperations = internalStateOperations.getRootStateOperations();\n    if (results) {\n      // get our current stream\n      const cur = stateOperations.getState();\n\n      // set the state to the current + new\n      stateOperations.setState({ ...cur, ...results.defaults });\n    }\n\n    stateOperations.dispatch(new UpdateState()).subscribe(() => {\n      if (results) {\n        factory.invokeInit(results.states);\n      }\n    });\n  }\n}\n\nexport type ModuleOptions = Partial<NgxsConfig>;\n\nexport function ngxsConfigFactory(options: ModuleOptions): NgxsConfig {\n  const config = Object.assign(new NgxsConfig(), options);\n  return config;\n}\n\nexport const ROOT_OPTIONS = new InjectionToken('ROOT_OPTIONS');\n\n/**\n * Ngxs Module\n */\n@NgModule({})\nexport class NgxsModule {\n  /**\n   * Root module factory\n   */\n  static forRoot(states: any[] = [], options: ModuleOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: NgxsRootModule,\n      providers: [\n        StateFactory,\n        StateContextFactory,\n        Actions,\n        InternalActions,\n        InternalDispatcher,\n        InternalDispatchedActionResults,\n        InternalStateOperations,\n        Store,\n        StateStream,\n        SelectFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: ROOT_STATE_TOKEN,\n          useValue: states\n        },\n        {\n          provide: ROOT_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NgxsConfig,\n          useFactory: ngxsConfigFactory,\n          deps: [ROOT_OPTIONS]\n        }\n      ]\n    };\n  }\n\n  /**\n   * Feature module factory\n   */\n  static forFeature(states: any[]): ModuleWithProviders {\n    return {\n      ngModule: NgxsFeatureModule,\n      providers: [\n        StateFactory,\n        PluginManager,\n        ...states,\n        {\n          provide: FEATURE_STATE_TOKEN,\n          multi: true,\n          useValue: states\n        }\n      ]\n    };\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}

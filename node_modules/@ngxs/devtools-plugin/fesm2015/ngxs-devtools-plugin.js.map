{
  "version": 3,
  "file": "ngxs-devtools-plugin.js",
  "sources": [
    "ng://@ngxs/devtools-plugin/packages/devtools-plugin/src/devtools.module.ts",
    "ng://@ngxs/devtools-plugin/packages/devtools-plugin/src/devtools.plugin.ts",
    "ng://@ngxs/devtools-plugin/packages/devtools-plugin/src/symbols.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\n\nimport { NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS } from './symbols';\nimport { NgxsReduxDevtoolsPlugin } from './devtools.plugin';\n\nexport function devtoolsOptionsFactory(options: NgxsDevtoolsOptions) {\n  return {\n    name: 'NGXS',\n    ...options\n  };\n}\n\nexport const USER_OPTIONS = new InjectionToken('USER_OPTIONS');\n\n@NgModule({\n  imports: [NgxsModule]\n})\nexport class NgxsReduxDevtoolsPluginModule {\n  static forRoot(options?: NgxsDevtoolsOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsReduxDevtoolsPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsReduxDevtoolsPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_DEVTOOLS_OPTIONS,\n          useFactory: devtoolsOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n",
    "import { Injectable, Inject, Injector } from '@angular/core';\nimport { NgxsPlugin, getActionTypeFromInstance, Store } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\n\nimport { NgxsDevtoolsExtension, NgxsDevtoolsOptions, NGXS_DEVTOOLS_OPTIONS, NgxsDevtoolsAction } from './symbols';\n\n/**\n * Adds support for the Redux Devtools extension:\n * http://extension.remotedev.io/\n */\n@Injectable()\nexport class NgxsReduxDevtoolsPlugin implements NgxsPlugin {\n  private readonly devtoolsExtension: NgxsDevtoolsExtension | null = null;\n  private readonly windowObj: any = typeof window !== 'undefined' ? window : {};\n\n  constructor(@Inject(NGXS_DEVTOOLS_OPTIONS) private _options: NgxsDevtoolsOptions, private _injector: Injector) {\n    const globalDevtools = this.windowObj['__REDUX_DEVTOOLS_EXTENSION__'] || this.windowObj['devToolsExtension'];\n    if (globalDevtools) {\n      this.devtoolsExtension = globalDevtools.connect(_options) as NgxsDevtoolsExtension;\n      this.devtoolsExtension.subscribe(a => this.dispatched(a));\n    }\n  }\n\n  /**\n   * Middleware handle function\n   */\n  handle(state: any, action: any, next: any) {\n    const isDisabled = this._options && this._options.disabled;\n    if (!this.devtoolsExtension || isDisabled) {\n      return next(state, action);\n    }\n\n    return next(state, action).pipe(\n      tap(newState => {\n        // if init action, send initial state to dev tools\n        const isInitAction = getActionTypeFromInstance(action) === '@@INIT';\n        if (isInitAction) {\n          this.devtoolsExtension.init(state);\n        } else {\n          const type = getActionTypeFromInstance(action);\n\n          this.devtoolsExtension.send({ ...action, type }, newState);\n        }\n      })\n    );\n  }\n\n  /**\n   * Handle the action from the dev tools subscription\n   */\n  dispatched(action: NgxsDevtoolsAction) {\n    if (action.type === 'DISPATCH') {\n      if (action.payload.type === 'JUMP_TO_ACTION' || action.payload.type === 'JUMP_TO_STATE') {\n        const prevState = JSON.parse(action.state);\n        // Lazy get the store for circular depedency issues\n        const store = this._injector.get(Store);\n        store.reset(prevState);\n      } else if (action.payload.type === 'TOGGLE_ACTION') {\n        console.warn('Skip is not supported at this time.');\n      }\n    } else if (action.type === 'ACTION') {\n      // Lazy get the store for circular depedency issues\n      const store = this._injector.get(Store);\n      const actionPayload = JSON.parse(action.payload);\n      store.dispatch(actionPayload);\n    }\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\n/**\n * Interface for the redux-devtools-extension API.\n */\nexport interface NgxsDevtoolsExtension {\n  init(state);\n  send(action: any, state?: any);\n  subscribe(fn: (message: NgxsDevtoolsAction) => void);\n}\n\nexport interface NgxsDevtoolsAction {\n  type: string;\n  payload: any;\n  state: any;\n  id: number;\n  source: string;\n}\n\nexport interface NgxsDevtoolsOptions {\n  /**\n   * The name of the extension\n   */\n  name?: string;\n\n  /**\n   * Whether the dev tools is enabled or note. Useful for setting during production.\n   */\n  disabled?: boolean;\n\n  /**\n   * Max number of entiries to keep.\n   */\n  maxAge?: number;\n\n  /**\n   * Reformat actions before sending to dev tools\n   */\n  actionSanitizer?: (action: any) => void;\n\n  /**\n   * Reformat state before sending to devtools\n   */\n  stateSanitizer?: (state: any) => void;\n}\n\nexport const NGXS_DEVTOOLS_OPTIONS = new InjectionToken('NGXS_DEVTOOLS_OPTIONS');\n"
  ],
  "names": [],
  "mappings": "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"
}

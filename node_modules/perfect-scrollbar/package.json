{
  "_args": [
    [
      {
        "raw": "perfect-scrollbar@^1.3.0",
        "scope": null,
        "escapedName": "perfect-scrollbar",
        "name": "perfect-scrollbar",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/ngx-perfect-scrollbar"
    ]
  ],
  "_from": "perfect-scrollbar@>=1.3.0 <2.0.0",
  "_id": "perfect-scrollbar@1.4.0",
  "_inCache": true,
  "_location": "/perfect-scrollbar",
  "_nodeVersion": "8.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/perfect-scrollbar_1.4.0_1528347671517_0.35441471869736807"
  },
  "_npmUser": {
    "name": "utatti",
    "email": "me@noraesae.net"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "perfect-scrollbar@^1.3.0",
    "scope": null,
    "escapedName": "perfect-scrollbar",
    "name": "perfect-scrollbar",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ngx-perfect-scrollbar"
  ],
  "_resolved": "https://registry.npmjs.org/perfect-scrollbar/-/perfect-scrollbar-1.4.0.tgz",
  "_shasum": "5d014ef9775e1f43058a1dbae9ed1daf0e7091f1",
  "_shrinkwrap": null,
  "_spec": "perfect-scrollbar@^1.3.0",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/ngx-perfect-scrollbar",
  "author": {
    "name": "Hyunje Jun",
    "email": "me@noraesae.net"
  },
  "bugs": {
    "url": "https://github.com/utatti/perfect-scrollbar/issues"
  },
  "dependencies": {},
  "description": "Minimalistic but perfect custom scrollbar plugin",
  "devDependencies": {
    "chokidar-cli": "^1.2.0",
    "prettier": "^1.7.0",
    "rollup": "^0.50.0",
    "rollup-plugin-buble": "^0.16.0",
    "uglify-js": "^3.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/2Sk/khljhdrsamjJYS5NjrH+GKEHEwh7zFSiYyxROyYKagkE4kSn2zDQDRTOMo8mpT2jikxx6yI1dG7lNP/hw==",
    "shasum": "5d014ef9775e1f43058a1dbae9ed1daf0e7091f1",
    "tarball": "https://registry.npmjs.org/perfect-scrollbar/-/perfect-scrollbar-1.4.0.tgz",
    "fileCount": 22,
    "unpackedSize": 174094,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGLwZCRA9TVsSAnZWagAArZEP/i/ko1ei9cIYgVLvQ5AJ\nBgYc4Xi6g4xuN/vW12zbSOTsFIhN8OC65DKLTcw8I9/tFZWPQTfAhUtRBMLI\nv2XEGNZIHlPsesO8hKAwGg6E5Py5jxXgJV+i796S/9Cxq4vct+pqCYRkB528\nF3I/RKqVeeZUkYu4QA+gAxINYTvpEph5iChxoj1Vv531g22wtUDANj1gMcnw\nQITvSgnJ3DCXBc/KCXYWP/b2VZliVhfmCWoXO6xnEGQTkjGZKMk+SdTajrMc\nycW+zPTcFaBEPm7eo84cvUbKmAybfMoCopmyDBvk5SsVJsoOCenqxTD59EeB\nbmGkP4+sgQBM1yoEQVOOO5qFmrsXf49zkE8FKv/iCSXCL8UZbaPxnrHDZL9f\nZxzqMkqaPBKQ2FidNBzUDk92dkUArUCf8q+UNhxgkumnjc1rJqgP5iqx89Bb\n5hX+Gq8kCjjlL1n+aGVFXh4SaV/AtK9Dt/MO0a1vPJtYsxGya1pA9EdtBb6Z\ncZnWri/i9kaxXRIJoCN4PKEd+RDnZBbwSU/P32E2Hl8uVtOhw7Dzpm8QNgRj\nHi77RgFdxSLlyTt85q/PV5T9UsKRJ14FhU11XX53vnYhhXMX+YiM3xB9LwnX\n0M88XlgnabfkbUK7LhSMmM8XUsK3jZSave4ir+HIMqzws0SmGbEc/FttlioR\nUCJK\r\n=1msm\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "css",
    "dist",
    "src",
    "types"
  ],
  "gitHead": "e39e0f0098b796358139ab7ec19c4176663b97ee",
  "homepage": "https://github.com/utatti/perfect-scrollbar#readme",
  "jspm": {
    "main": "dist/perfect-scrollbar.common.js",
    "registry": "jspm"
  },
  "keywords": [
    "frontend",
    "scroll",
    "scrollbar"
  ],
  "license": "MIT",
  "main": "dist/perfect-scrollbar.common.js",
  "maintainers": [
    {
      "name": "utatti",
      "email": "me@noraesae.net"
    }
  ],
  "module": "dist/perfect-scrollbar.esm.js",
  "name": "perfect-scrollbar",
  "optionalDependencies": {},
  "readme": "# perfect-scrollbar\n\nMinimalistic but perfect custom scrollbar plugin\n\n[![npm](https://img.shields.io/npm/v/perfect-scrollbar.svg)](https://www.npmjs.com/package/perfect-scrollbar)\n[![Travis CI](https://travis-ci.org/utatti/perfect-scrollbar.svg?branch=master)](https://travis-ci.org/utatti/perfect-scrollbar)\n\n***To read documentation for versions < 1.0, please visit [`v0.8.1`](https://github.com/utatti/perfect-scrollbar/tree/0.8.1).***\n\n## Why perfect-scrollbar?\n\nperfect-scrollbar is minimalistic but *perfect* (for me, and maybe for most\ndevelopers) scrollbar plugin.\n\n* No change on design layout\n* No manipulation on DOM tree\n* Use plain `scrollTop` and `scrollLeft`\n* Scrollbar style is fully customizable\n* Efficient update on layout change\n\nI hope you love it!\n\n## Demo\n\nIt's on the [GitHub Pages](http://utatti.github.io/perfect-scrollbar/).\n\n## Table of Contents\n\n* [Install](#install)\n* [Before using perfect-scrollbar](#before-using-perfect-scrollbar)\n* [Caveats](#caveats)\n* [How to use](#how-to-use)\n* [Options](#options)\n* [Events](#events)\n* [Helpdesk](#helpdesk)\n* [IE Support](#ie-support)\n* [License](#license)\n\n## Install\n\n#### npm\n\nThe best way to install and use perfect-scrollbar is with npm. It's registered\nas [perfect-scrollbar](https://www.npmjs.com/package/perfect-scrollbar).\n\n```\n$ npm install perfect-scrollbar\n```\n\n#### Manual download\n\nYou can manually download perfect-scrollbar\nfrom [Releases](https://github.com/utatti/perfect-scrollbar/releases).\n\n#### From sources\n\nIf you want to use the development version of the plugin, build from source\nmanually. The development version may be unstable.\n\n```\n$ git clone https://github.com/utatti/perfect-scrollbar.git\n$ cd perfect-scrollbar\n$ npm install\n$ npm run build\n```\n\n#### JSFiddle\n\nYou can fork the following JSFiddles for testing and experimenting purposes:\n\n* [perfect-scrollbar JSFiddle](https://jsfiddle.net/utatti/dyvL31r6/)\n\n#### Unofficial sources\n\nSources not mentioned above are not maintained officially. If there are issues\nof the following sources, please ask and resolve in each repository.\n\n## Before using perfect-scrollbar\n\nThe following requirements should meet.\n\n* the container must have a `position` style.\n* the container must be a normal container element.\n\nThe following requirements are included in the basic CSS, but please keep in\nmind when you'd like to change the CSS files.\n\n* the container must have an `overflow: hidden` css style.\n* the scrollbar's position must be `absolute`.\n* the scrollbar-x must have `bottom` or `top`, and the scrollbar-y must have\n  `right` or `left`.\n\nFinally, scroll hooking is generally considered as a bad practice, and\nperfect-scrollbar should be used carefully. Unless custom scroll is really\nneeded, using browser-native scroll is always recommended.\n\n## Caveats\n\nperfect-scrollbar emulates some scrolls, but not all of the kinds. It also *does not* work\nin some situations. You can find these cases in [Caveats](https://github.com/utatti/perfect-scrollbar/wiki/Caveats).\nBasically, items listed in the caveats are hacky to implement and may not be\nimplemented in the future. If the features are really needed, please consider\nusing browser-native scroll.\n\n## How to use\n\nFirst of all, please check if the container element meets the requirements and\nthe main CSS is imported.\n\n```html\n<style>\n  #container {\n    position: relative;\n    width: 600px;\n    height: 400px;\n  }\n</style>\n<link rel=\"stylesheet\" href=\"css/perfect-scrollbar.css\">\n```\n\n\nImport via ES modules:\n\n```js\nimport PerfectScrollbar from 'perfect-scrollbar';\n```\n\nOr in browser:\n\n```html\n<script src=\"dist/perfect-scrollbar.js\"></script>\n```\n\nTo initialise:\n\n```js\nconst container = document.querySelector('#container');\nconst ps = new PerfectScrollbar(container);\n\n// or just with selector string\nconst ps = new PerfectScrollbar('#container');\n```\n\nIt can be initialised with [options](#options).\n\n```js\nconst ps = new PerfectScrollbar('#container', {\n  wheelSpeed: 2,\n  wheelPropagation: true,\n  minScrollbarLength: 20\n});\n```\n\nIf the size of your container or content changes, call `update`.\n\n```js\nps.update();\n```\n\nIf you want to destroy the scrollbar, use `destroy`.\n\n```js\nps.destroy();\nps = null; // to make sure garbages are collected\n```\n\nIf you want to scroll to somewhere, just update `scrollTop`.\n\n```js\nconst container = document.querySelector('#container');\ncontainer.scrollTop = 0;\n```\n\nYou can also get information about how to use the plugin from code in [`examples/`](examples).\n\n## Options\n\n### `handlers {String[]}`\n\nIt is a list of handlers to scroll the element.\n\n**Default**: `['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch']`\n\n### `wheelSpeed {Number}`\n\nThe scroll speed applied to mousewheel event.\n\n**Default**: `1`\n\n### `wheelPropagation {Boolean}`\n\nIf this option is true, when the scroll reaches the end of the side, mousewheel\nevent will be propagated to parent element.\n\n**Default**: `false`\n\n### `swipeEasing {Boolean}`\n\nIf this option is true, swipe scrolling will be eased.\n\n**Default**: `true`\n\n### `minScrollbarLength {Number?}`\n\nWhen set to an integer value, the thumb part of the scrollbar will not shrink\nbelow that number of pixels.\n\n**Default**: `null`\n\n### `maxScrollbarLength {Number?}`\n\nWhen set to an integer value, the thumb part of the scrollbar will not expand\nover that number of pixels.\n\n**Default**: `null`\n\n### `scrollingThreshold {Number}`\n\nThis sets threashold for `ps--scrolling-x` and `ps--scrolling-y` classes to\nremain. In the default CSS, they make scrollbars shown regardless of hover\nstate. The unit is millisecond.\n\n**Default**: `1000`\n\n### `useBothWheelAxes {Boolean}`\n\nWhen set to true, and only one (vertical or horizontal) scrollbar is visible\nthen both vertical and horizontal scrolling will affect the scrollbar.\n\n**Default**: `false`\n\n### `suppressScrollX {Boolean}`\n\nWhen set to true, the scroll bar in X axis will not be available, regardless of\nthe content width.\n\n**Default**: `false`\n\n### `suppressScrollY {Boolean}`\n\nWhen set to true, the scroll bar in Y axis will not be available, regardless of\nthe content height.\n\n**Default**: `false`\n\n### `scrollXMarginOffset {Number}`\n\nThe number of pixels the content width can surpass the container width without\nenabling the X axis scroll bar. Allows some \"wiggle room\" or \"offset break\", so\nthat X axis scroll bar is not enabled just because of a few pixels.\n\n**Default**: `0`\n\n### `scrollYMarginOffset {Number}`\n\nThe number of pixels the content height can surpass the container height without\nenabling the Y axis scroll bar. Allows some \"wiggle room\" or \"offset break\", so\nthat Y axis scroll bar is not enabled just because of a few pixels.\n\n**Default**: `0`\n\n## Events\n\nperfect-scrollbar dispatches custom events.\n\n```js\ncontainer.addEventListener('ps-scroll-x', () => ...);\n```\n\n### `ps-scroll-y`\n\nThis event fires when the y-axis is scrolled in either direction.\n\n### `ps-scroll-x`\n\nThis event fires when the x-axis is scrolled in either direction.\n\n### `ps-scroll-up`\n\nThis event fires when scrolling upwards.\n\n### `ps-scroll-down`\n\nThis event fires when scrolling downwards.\n\n### `ps-scroll-left`\n\nThis event fires when scrolling to the left.\n\n### `ps-scroll-right`\n\nThis event fires when scrolling to the right.\n\n### `ps-y-reach-start`\n\nThis event fires when scrolling reaches the start of the y-axis.\n\n### `ps-y-reach-end`\n\nThis event fires when scrolling reaches the end of the y-axis (useful for\ninfinite scroll).\n\n### `ps-x-reach-start`\n\nThis event fires when scrolling reaches the start of the x-axis.\n\n### `ps-x-reach-end`\n\nThis event fires when scrolling reaches the end of the x-axis.\n\nYou can also watch the reach state via the `reach` property.\n\n```js\nconst ps = new PerfectScrollbar(...);\n\nconsole.log(ps.reach.x); // => 'start' or 'end' or null\nconsole.log(ps.reach.y); // => 'start' or 'end' or null\n```\n\n## Helpdesk\n\nIf you have any idea to improve this project or any problem using this, please\nfeel free to upload an [issue](https://github.com/utatti/perfect-scrollbar/issues).\n\nFor common problems, there is a [FAQ](https://github.com/utatti/perfect-scrollbar/wiki/FAQ) wiki\npage. Please check the page before uploading an issue.\n\nAlso, the project is not actively maintained. No maintainer is paid, and most of\nus are busy on our professional or personal works. Please understand that it may\ntake a while for an issue to be resolved. Uploading a PR would be the fastest\nway to fix an issue.\n\n## IE Support\n\nThe plugin is developed to work in modern MS browsers including Edge and IE11,\nbut may have some issues in IE11 mainly because of IE rendering bug concerning\nsync update on scroll properties. The problem is mentioned in\n[Caveats](https://github.com/utatti/perfect-scrollbar/wiki/Caveats) too.\n\nIE<11 is not supported, and patches to fix problems in IE<=10 will not be\naccepted. When old IEs should be supported, please fork the project and make\nmodification locally.\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/utatti/perfect-scrollbar.git"
  },
  "scripts": {
    "build": "npm run clean && node build",
    "clean": "rm -rf dist",
    "format": "prettier --write --single-quote --trailing-comma es5 'src/**/*.js'",
    "format:lint": "prettier -l --single-quote --trailing-comma es5 'src/**/*.js'",
    "release": "./release",
    "test": "npm run format:lint && npm run build",
    "watch": "npm run build && SHELL=/bin/bash chokidar 'src/**/*.js' -c 'npm run format && npm run build'"
  },
  "style": "css/perfect-scrollbar.css",
  "typings": "types/perfect-scrollbar.d.ts",
  "version": "1.4.0"
}

{
  "version": 3,
  "file": "ngxs-logger-plugin.js",
  "sources": [
    "ng://@ngxs/logger-plugin/packages/logger-plugin/src/logger.module.ts",
    "ng://@ngxs/logger-plugin/packages/logger-plugin/src/logger.plugin.ts",
    "ng://@ngxs/logger-plugin/packages/logger-plugin/src/internals.ts",
    "ng://@ngxs/logger-plugin/packages/logger-plugin/src/symbols.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { NgxsLoggerPluginOptions, NGXS_LOGGER_PLUGIN_OPTIONS } from './symbols';\nimport { NgxsLoggerPlugin } from './logger.plugin';\n\nexport const USER_OPTIONS = new InjectionToken('LOGGER_USER_OPTIONS');\n\nexport function loggerOptionsFactory(options: NgxsLoggerPluginOptions) {\n  const defaultLoggerOptions: NgxsLoggerPluginOptions = {\n    logger: console,\n    collapsed: false,\n    disabled: false\n  };\n\n  return {\n    ...defaultLoggerOptions,\n    ...options\n  };\n}\n\n@NgModule()\nexport class NgxsLoggerPluginModule {\n  static forRoot(options?: NgxsLoggerPluginOptions): ModuleWithProviders {\n    return {\n      ngModule: NgxsLoggerPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsLoggerPlugin,\n          multi: true\n        },\n        {\n          provide: USER_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGXS_LOGGER_PLUGIN_OPTIONS,\n          useFactory: loggerOptionsFactory,\n          deps: [USER_OPTIONS]\n        }\n      ]\n    };\n  }\n}\n",
    "import { Injectable, Inject } from '@angular/core';\nimport { NgxsPlugin, getActionTypeFromInstance } from '@ngxs/store';\n\nimport { NGXS_LOGGER_PLUGIN_OPTIONS, NgxsLoggerPluginOptions } from './symbols';\nimport { pad } from './internals';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class NgxsLoggerPlugin implements NgxsPlugin {\n  constructor(@Inject(NGXS_LOGGER_PLUGIN_OPTIONS) private _options: NgxsLoggerPluginOptions) {}\n\n  handle(state, event, next) {\n    if (this._options.disabled) {\n      return next(state, event);\n    }\n\n    const options = this._options || <any>{};\n    const logger = options.logger || console;\n    const actionName = getActionTypeFromInstance(event);\n    const time = new Date();\n\n    // tslint:disable-next-line\n    const formattedTime = ` @ ${pad(time.getHours(), 2)}:${pad(time.getMinutes(), 2)}:${pad(\n      time.getSeconds(),\n      2\n    )}.${pad(time.getMilliseconds(), 3)}`;\n\n    const message = `action ${actionName}${formattedTime}`;\n    const startMessage = options.collapsed ? logger.groupCollapsed : logger.group;\n\n    try {\n      startMessage.call(logger, message);\n    } catch (e) {\n      console.log(message);\n    }\n\n    if (typeof event.payload !== 'undefined') {\n      this.log('payload', 'color: #9E9E9E; font-weight: bold', event.payload);\n    }\n\n    this.log('prev state', 'color: #9E9E9E; font-weight: bold', state);\n\n    return next(state, event).pipe(\n      tap(nextState => {\n        this.log('next state', 'color: #4CAF50; font-weight: bold', nextState);\n        try {\n          logger.groupEnd();\n        } catch (e) {\n          logger.log('—— log end ——');\n        }\n      })\n    );\n  }\n\n  log(title: string, color: string, payload: any) {\n    const options = this._options || <any>{};\n    const logger = options.logger || console;\n\n    if (this.isIE()) {\n      logger.log(title, payload);\n    } else {\n      logger.log('%c ' + title, color, payload);\n    }\n  }\n\n  isIE(): boolean {\n    const ua = typeof window !== 'undefined' && window.navigator.userAgent ? window.navigator.userAgent : '';\n    let ms_ie = false;\n\n    const old_ie = ua.indexOf('MSIE ');\n    const new_ie = ua.indexOf('Trident/');\n\n    if (old_ie > -1 || new_ie > -1) {\n      ms_ie = true;\n    }\n\n    return ms_ie;\n  }\n}\n",
    "export const repeat = (str, times) => new Array(times + 1).join(str);\nexport const pad = (num, maxLength) => repeat('0', maxLength - num.toString().length) + num;\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface NgxsLoggerPluginOptions {\n  /** Auto expand logged actions  */\n  collapsed?: boolean;\n\n  /** Provide alternate console.log implementation */\n  logger?: any;\n\n  /** Disable the logger. Useful for prod mode. */\n  disabled?: boolean;\n}\n\nexport const NGXS_LOGGER_PLUGIN_OPTIONS = new InjectionToken('NGXS_LOGGER_PLUGIN_OPTIONS');\n"
  ],
  "names": [],
  "mappings": "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"
}

{"version":3,"file":"swiper.directive.js","sourceRoot":"","sources":["../../src/lib/swiper.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Swiper from 'swiper/dist/js/swiper.js';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Directive,\n  AfterViewInit, OnDestroy, DoCheck, OnChanges, Input, Output, EventEmitter,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { SWIPER_CONFIG } from './swiper.interfaces';\n\nimport { SwiperEvents, SwiperConfig, SwiperConfigInterface } from './swiper.interfaces';\n\n@Directive({\n  selector: '[swiper]',\n  exportAs: 'ngxSwiper'\n})\nexport class SwiperDirective implements AfterViewInit, OnDestroy, DoCheck, OnChanges {\n  private instance: any;\n\n  private configDiff: KeyValueDiffer<string, any>;\n\n  private initialIndex: number;\n\n  @Input()\n  set index(index: number) {\n    if (index != null) {\n      this.setIndex(index);\n    }\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input('swiper') config: SwiperConfigInterface;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object, private zone: NgZone,\n    private elementRef: ElementRef, private differs: KeyValueDiffers,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngAfterViewInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const params = new SwiperConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    if (params.scrollbar === true) {\n      params.scrollbar = {\n        el: '.swiper-scrollbar'\n      };\n    }\n\n    if (params.pagination === true) {\n      params.pagination = {\n        el: '.swiper-pagination'\n      };\n    }\n\n    if (params.navigation === true) {\n      params.navigation = {\n        prevEl: '.swiper-button-prev',\n        nextEl: '.swiper-button-next'\n      };\n    }\n\n    if (this.disabled) {\n      params.allowSlidePrev = false;\n      params.allowSlideNext = false;\n    }\n\n    if (this.initialIndex != null) {\n      params.initialSlide = this.initialIndex;\n\n      this.initialIndex = null;\n    }\n\n    params['on'] = {\n      slideChange: () => {\n        this.zone.run(() => {\n          if (this.instance) {\n            this.indexChange.emit(this.instance.realIndex);\n          }\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Swiper(this.elementRef.nativeElement, params);\n    });\n\n    if (params.init !== false) {\n      this.S_INIT.emit(this.instance);\n    }\n\n    // Add native Swiper event handling\n    SwiperEvents.forEach((eventName) => {\n      eventName = eventName.replace('swiper', '');\n      eventName = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n\n      this.instance.on(eventName, (...args) => {\n        if (args.length === 1) {\n          args = args[0];\n        }\n\n        if (this[`S_${eventName.toUpperCase()}`].observers.length > 0) {\n          this.zone.run(() => {\n            this[`S_${eventName.toUpperCase()}`].emit(args);\n          });\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy(true, this.instance.initialized || false);\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes) {\n        this.initialIndex = this.getIndex(true);\n\n        this.ngOnDestroy();\n\n        this.ngAfterViewInit();\n\n        this.update();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        } else if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        }\n      }\n    }\n  }\n\n  public swiper(): any {\n    return this.instance;\n  }\n\n  public init(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.init();\n      });\n    }\n  }\n\n  public update(): void {\n    setTimeout(() => {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.update();\n        });\n      }\n    }, 0);\n  }\n\n  public getIndex(real?: boolean): number {\n    if (!this.instance) {\n      return this.initialIndex;\n    } else {\n      return real ? this.instance.realIndex : this.instance.activeIndex;\n    }\n  }\n\n  public setIndex(index: number, speed?: number, silent?: boolean): void {\n    if (!this.instance) {\n      this.initialIndex = index;\n    } else {\n      let realIndex = index * this.instance.params.slidesPerGroup;\n\n      if (this.instance.params.loop) {\n        realIndex += this.instance.loopedSlides;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideTo(realIndex, speed, !silent);\n      });\n    }\n  }\n\n  public prevSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slidePrev(speed, !silent);\n      });\n    }\n  }\n\n  public nextSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideNext(speed, !silent);\n      });\n    }\n  }\n\n  public stopAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.stop();\n      });\n    }\n  }\n\n  public startAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.start();\n      });\n    }\n  }\n}\n"]}
{
  "_args": [
    [
      {
        "raw": "crossvent@1.5.4",
        "scope": null,
        "escapedName": "crossvent",
        "name": "crossvent",
        "rawSpec": "1.5.4",
        "spec": "1.5.4",
        "type": "version"
      },
      "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/dragula"
    ]
  ],
  "_from": "crossvent@1.5.4",
  "_id": "crossvent@1.5.4",
  "_inCache": true,
  "_location": "/crossvent",
  "_nodeVersion": "2.3.3",
  "_npmUser": {
    "name": "bevacqua",
    "email": "nicolasbevacqua@gmail.com"
  },
  "_npmVersion": "2.13.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "crossvent@1.5.4",
    "scope": null,
    "escapedName": "crossvent",
    "name": "crossvent",
    "rawSpec": "1.5.4",
    "spec": "1.5.4",
    "type": "version"
  },
  "_requiredBy": [
    "/dragula"
  ],
  "_resolved": "https://registry.npmjs.org/crossvent/-/crossvent-1.5.4.tgz",
  "_shasum": "da2c4f8f40c94782517bf2beec1044148194ab92",
  "_shrinkwrap": null,
  "_spec": "crossvent@1.5.4",
  "_where": "/Users/yesi/_dev/__current/ekoal.web.athena/node_modules/dragula",
  "author": {
    "name": "Nicolas Bevacqua",
    "email": "hello@bevacqua.io",
    "url": "http://bevacqua.io"
  },
  "bugs": {
    "url": "https://github.com/bevacqua/crossvent/issues"
  },
  "dependencies": {
    "custom-event": "1.0.0"
  },
  "description": "Cross-platform browser event handling",
  "devDependencies": {
    "browserify": "^4.1.3",
    "contra": "^1.6.10",
    "gulp": "^3.6.2",
    "gulp-bump": "~0.1.0",
    "gulp-clean": "~0.2.3",
    "gulp-git": "~0.2.0",
    "gulp-header": "^1.0.2",
    "gulp-rename": "~0.2.2",
    "gulp-size": "~0.1.1",
    "gulp-streamify": "0.0.5",
    "gulp-uglify": "~0.1.0",
    "gzip-size": "^1.0.0",
    "jquery": "^1.11.1",
    "pretty-bytes": "^1.0.1",
    "vinyl-source-stream": "^0.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "da2c4f8f40c94782517bf2beec1044148194ab92",
    "tarball": "https://registry.npmjs.org/crossvent/-/crossvent-1.5.4.tgz"
  },
  "gitHead": "9ca5095dc0423df85bdaf6047c5c623dbeff7d49",
  "homepage": "https://github.com/bevacqua/crossvent",
  "license": "MIT",
  "main": "src/crossvent.js",
  "maintainers": [
    {
      "name": "bevacqua",
      "email": "nicolasbevacqua@gmail.com"
    }
  ],
  "name": "crossvent",
  "optionalDependencies": {},
  "readme": "# crossvent\n\n> Cross-platform browser event handling\n\nThe event handler API used by [dominus][1].\n\n# Install\n\nUsing Bower\n\n```shell\nbower install -S crossvent\n```\n\nUsing `npm`\n\n```shell\nnpm install -S crossvent\n```\n\n# API\n\nThe API exposes a few methods that let you deal with event handling in a consistent manner across browsers.\n\n### `crossvent.add(el, type, fn, capturing?)`\n\nAdds an event listener `fn` of type `type` to DOM element `el`.\n\n```js\ncrossvent.add(document.body, 'click', function (e) {\n  console.log('clicked document body');\n});\n```\n\n### `crossvent.remove(el, type, fn, capturing?)`\n\nRemoves an event listener `fn` of type `type` from DOM element `el`.\n\n```js\ncrossvent.add(document.body, 'click', clicked);\ncrossvent.remove(document.body, 'click', clicked);\n\nfunction clicked (e) {\n  console.log('clicked document body');\n}\n```\n\n### `crossvent.fabricate(el, type, model?)`\n\nCreates a synthetic custom event of type `type` and dispatches it on `el`. You can provide a custom `model` which will be accessible as `e.detail`.\n\n```js\ncrossvent.add(document.body, 'sugar', sugary);\ncrossvent.fabricate(document.body, 'sugar', { onTop: true });\n\nfunction sugary (e) {\n  console.log('synthetic sugar' + e.detail.onTop ? ' on top' : '');\n}\n```\n\n# License\n\nMIT\n\n[1]: https://github.com/bevacqua/dominus\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/bevacqua/crossvent.git"
  },
  "scripts": {},
  "version": "1.5.4"
}

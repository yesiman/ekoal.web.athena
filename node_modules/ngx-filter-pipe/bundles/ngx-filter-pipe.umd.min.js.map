{
  "version": 3,
  "file": "ngx-filter-pipe.umd.min.js",
  "sources": [
    "ng://ngx-filter-pipe/out/src/app/shared/ngx-filter-pipe/ngx-filter.pipe.ts",
    "ng://ngx-filter-pipe/out/src/app/shared/ngx-filter-pipe/ngx-filter.module.ts"
  ],
  "sourcesContent": [
    "/**\n * Created by vadimdez on 28/06/16.\n */\nimport { Pipe, Injectable, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterBy',\n  pure: false\n})\n\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n\n  private filterByString(filter) {\n    if (filter) {\n      filter = filter.toLowerCase();\n    }\n    return value => {\n      return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n  }\n\n  private filterByBoolean(filter) {\n    return value => {\n      return Boolean(value) === filter;\n    }\n  }\n\n  private filterByObject(filter) {\n    return value => {\n      for (let key in filter) {\n\n        if (key === '$or') {\n          if (!this.filterByOr(filter.$or)(this.getValue(value))) {\n            return false;\n          }\n          continue;\n        }\n\n        let walker = value;\n        let found = false;\n        do {\n          if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n            found = true;\n            break;\n          }\n        } while (walker = Object.getPrototypeOf(walker));\n\n        if (!found) {\n          return false;\n        }\n\n        let val = this.getValue(value[key]);\n        const filterType = typeof filter[key];\n        let isMatching;\n\n        if (filterType === 'boolean') {\n          isMatching = this.filterByBoolean(filter[key])(val);\n        } else if (filterType === 'string') {\n          isMatching = this.filterByString(filter[key])(val);\n        } else if (filterType === 'object') {\n          isMatching = this.filterByObject(filter[key])(val);\n        } else {\n          isMatching = this.filterDefault(filter[key])(val);\n        }\n\n        if (!isMatching) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  /**\n   * Filter value by $or\n   */\n  private filterByOr(filter: any[]): (value: any) => boolean {\n    return (value: any) => {\n      let hasMatch = false;\n      const length = filter.length;\n\n      const arrayComparison = (i) => {\n        return value.indexOf(filter[i]) !== -1;\n      };\n      const otherComparison = (i) => {\n        return value === filter[i];\n      };\n      const comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n\n      for (let i = 0; i < length; i++) {\n        if (comparison(i)) {\n          hasMatch = true;\n          break;\n        }\n      }\n\n      return hasMatch;\n    };\n  }\n\n  /**\n   * Checks function's value if type is function otherwise same value\n   */\n  private getValue(value: any): any {\n    return typeof value === 'function' ? value() : value;\n  }\n\n  /**\n   * Defatul filterDefault function\n   */\n  private filterDefault(filter: any): (value: any) => boolean {\n    return (value: any) => {\n      return filter === undefined || filter == value;\n    }\n  }\n\n  private isNumber(value) {\n    return !isNaN(parseInt(value, 10)) && isFinite(value);\n  }\n\n  transform(array: any[], filter: any): any {\n    const type = typeof filter;\n\n    if (!array) {\n      return array;\n    }\n\n    if (type === 'boolean') {\n      return array.filter(this.filterByBoolean(filter));\n    }\n\n    if (type === 'string') {\n      if (this.isNumber(filter)) {\n        return array.filter(this.filterDefault(filter));\n      }\n\n      return array.filter(this.filterByString(filter));\n    }\n\n    if (type === 'object') {\n      return array.filter(this.filterByObject(filter));\n    }\n\n    if (type === 'function') {\n      return array.filter(filter);\n    }\n\n    return array.filter(this.filterDefault(filter));\n  }\n}\n",
    "/**\n * Created by vadimdez on 28/11/2016.\n */\nimport { NgModule } from '@angular/core';\nimport { FilterPipe } from './ngx-filter.pipe';\n\n@NgModule({\n  declarations: [FilterPipe],\n  providers: [FilterPipe],\n  exports: [FilterPipe]\n})\n\nexport class FilterPipeModule {}\n"
  ],
  "names": [
    "FilterPipe",
    "prototype",
    "filterByString",
    "filter",
    "toLowerCase",
    "value",
    "indexOf",
    "filterByBoolean",
    "Boolean",
    "filterByObject",
    "_this",
    "this",
    "key",
    "walker",
    "found",
    "hasOwnProperty",
    "Object",
    "getOwnPropertyDescriptor",
    "getPrototypeOf",
    "val",
    "getValue",
    "filterType",
    "filterDefault",
    "filterByOr",
    "$or",
    "hasMatch",
    "length",
    "comparison",
    "Array",
    "isArray",
    "i",
    "transform",
    "array",
    "type",
    "isNumber",
    "decorators",
    "Pipe",
    "args",
    "name",
    "FilterPipeModule"
  ],
  "mappings": "2QAGA,SAAAA,KAEA,OASAA,EAAAC,UAAAC,eAAA,SAAAC,GAIA,OAHMA,IACNA,EAAAA,EAAAC,eAEA,SAAAC,GACA,OAAAF,KAAAE,IAAA,KAAA,GAAAA,GAAAD,cAAAE,QAAAH,KAIAH,EAAWC,UAAXM,gBAAA,SAAAJ,GACA,OAAA,SAAAE,GACA,OAAAG,QAAAH,KAAAF,IAIAH,EAAWC,UAAXQ,eAAA,SAAAN,GACA,IAAMO,EAANC,KAEA,OAAA,SAAAN,GACA,IAAA,IAAAO,KAAAT,EACA,GAAA,QAAAS,EAAA,CAOQ,IAARC,EAAAR,EACAS,GAAmC,EACnC,GACA,GAAYD,EAAZE,eAAAH,IAAAI,OAAAC,yBAAAJ,EAAAD,GAAA,CACAE,GAAA,EACA,aAGAD,EAAAG,OAAAE,eAAAL,IACA,IAAAC,EAEA,OAAA,EAEQ,IAAIK,EAAZT,EAAAU,SAAAf,EAAAO,IAEAS,SAAAlB,EAAAS,GAYA,KAVA,YAAAS,EAAAX,EAAAH,gBAAAJ,EAAAS,GAAAF,CAAAS,GAEA,WAAAE,EAAAX,EAAAR,eAAAC,EAAAS,GAAAF,CAAAS,GAEA,WAAAE,EAAAX,EAAAD,eAAAN,EAAAS,GAAAF,CAAAS,GAIyBT,EAAzBY,cAAAnB,EAAAS,GAAyBF,CAAzBS,IAGA,OAAA,OAlCA,IAAAT,EAAAa,WAAApB,EAAAqB,IAAAd,CAAAA,EAAAU,SAAAf,IACA,OAAA,aA4CAL,EAAAC,UAAAsB,WAAA,SAAApB,GACA,OAAA,SAAAE,GAYA,IAVM,IAANoB,GAAA,EACAC,EAAAvB,EAAAuB,OAQyBC,EAAzBC,MAAAC,QAAAxB,GAPA,SAAAyB,GACA,OAA8B,IAA9BzB,EAAAC,QAAAH,EAAA2B,KAEA,SAAAA,GACA,OAAAzB,IAAAF,EAAA2B,IAIAA,EAAA,EAAAA,EAAAJ,EAAAI,IACA,GAAUH,EAAVG,GAAA,CACAL,GAAA,EACA,oFAkBAzB,EAAAC,UAAmBqB,cAAnB,SAAAnB,GACA,OAAA,SAAAE,4GAUAL,EAAAC,UAAA8B,UAAA,SAAAC,EAAA7B,GACA,IAAA8B,SAAA9B,EACA,OAAA6B,EAIA,YAAAC,EAEAD,EAAA7B,OAAAQ,KAAAJ,gBAAAJ,IAEA,WAAA8B,EACAtB,KAAAuB,SAAA/B,GAEA6B,EAAA7B,OAA8BQ,KAA9BW,cAAAnB,IAGA6B,EAAA7B,OAAAQ,KAAAT,eAAAC,IAEA,WAAA8B,EAEAD,EAAA7B,OAAAQ,KAAAF,eAAAN,IAEA,aAAA8B,EAEAD,EAAA7B,OAA4BA,mCApB5B6B,GA5HAhC,KAEAA,EAAAmC,aACAF,KAAAG,EAAAA,KAAAC,OAEAC,KAAW,kGCFX,OAFA,gBAIAC,EAAAJ"
}

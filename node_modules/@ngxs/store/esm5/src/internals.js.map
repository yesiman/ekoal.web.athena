{
  "version": 3,
  "file": "internals.js",
  "sources": [
    "ng://@ngxs/store/packages/store/src/internals.ts"
  ],
  "sourcesContent": [
    "import { META_KEY, ActionOptions } from './symbols';\nimport { Observable } from 'rxjs';\n\nexport interface ObjectKeyMap<T> {\n  [key: string]: T;\n}\n\nexport interface StateClass {\n  [META_KEY]?: MetaDataModel;\n}\n\nexport type StateKeyGraph = ObjectKeyMap<string[]>;\n\nexport interface ActionHandlerMetaData {\n  fn: string;\n  options: ActionOptions;\n  type: string;\n}\n\nexport interface StateOperations<T> {\n  getState(): T;\n  setState(val: T);\n  dispatch(actions: any | any[]): Observable<void>;\n}\n\nexport interface MetaDataModel {\n  name: string;\n  actions: ObjectKeyMap<ActionHandlerMetaData[]>;\n  defaults: any;\n  path: string;\n  children: StateClass[];\n  instance: any;\n}\n\nexport type SelectFromState = (state: any) => any;\n\nexport interface SelectorMetaDataModel {\n  selectFromAppState: SelectFromState;\n  originalFn: Function;\n  storeMetaData: MetaDataModel;\n}\n\nexport interface MappedStore {\n  name: string;\n  actions: ObjectKeyMap<ActionHandlerMetaData[]>;\n  defaults: any;\n  instance: any;\n  depth: string;\n}\n\n/**\n * Ensures metadata is attached to the class and returns it.\n *\n * @ignore\n */\nexport function ensureStoreMetadata(target): MetaDataModel {\n  if (!target.hasOwnProperty(META_KEY)) {\n    const defaultMetadata: MetaDataModel = {\n      name: null,\n      actions: {},\n      defaults: {},\n      path: null,\n      children: [],\n      instance: null\n    };\n\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n  }\n\n  return target[META_KEY];\n}\n\n/**\n * Ensures metadata is attached to the selector and returns it.\n *\n * @ignore\n */\nexport function ensureSelectorMetadata(target): SelectorMetaDataModel {\n  if (!target.hasOwnProperty(META_KEY)) {\n    const defaultMetadata: SelectorMetaDataModel = {\n      selectFromAppState: null,\n      originalFn: null,\n      storeMetaData: null\n    };\n\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\n  }\n\n  return target[META_KEY];\n}\n\n/**\n * The generated function is faster than:\n * - pluck (Observable operator)\n * - memoize\n *\n * @ignore\n */\nexport function fastPropGetter(paths: string[]): (x: any) => any {\n  const segments = paths;\n  let seg = 'store.' + segments[0];\n  let i = 0;\n  const l = segments.length;\n\n  let expr = seg;\n  while (++i < l) {\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\n  }\n\n  const fn = new Function('store', 'return ' + expr + ';');\n\n  return <(x: any) => any>fn;\n}\n\n/**\n * Given an array of states, it will return a object graph. Example:\n *    const states = [\n *      Cart,\n *      CartSaved,\n *      CartSavedItems\n *    ]\n *\n * would return:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * @ignore\n */\nexport function buildGraph(stateClasses: StateClass[]): StateKeyGraph {\n  const findName = (stateClass: StateClass) => {\n    const meta = stateClasses.find(g => g === stateClass);\n    if (!meta) {\n      throw new Error(`Child state not found: ${stateClass}`);\n    }\n\n    if (!meta[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    return meta[META_KEY].name;\n  };\n\n  return stateClasses.reduce<StateKeyGraph>((result: StateKeyGraph, stateClass: StateClass) => {\n    if (!stateClass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const { name, children } = stateClass[META_KEY];\n    result[name] = (children || []).map(findName);\n    return result;\n  }, {});\n}\n\n/**\n * Given a states array, returns object graph\n * returning the name and state metadata. Example:\n *\n *  const graph = {\n *    cart: { metadata }\n *  };\n *\n * @ignore\n */\nexport function nameToState(states: StateClass[]): ObjectKeyMap<StateClass> {\n  return states.reduce<ObjectKeyMap<StateClass>>((result: ObjectKeyMap<StateClass>, stateClass: StateClass) => {\n    if (!stateClass[META_KEY]) {\n      throw new Error('States must be decorated with @State() decorator');\n    }\n\n    const meta = stateClass[META_KEY];\n    result[meta.name] = stateClass;\n    return result;\n  }, {});\n}\n\n/**\n * Given a object relationship graph will return the full path\n * for the child items. Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const r = {\n *    cart: 'cart',\n *    saved: 'cart.saved',\n *    items: 'cart.saved.items'\n *  };\n *\n * @ignore\n */\nexport function findFullParentPath(obj: StateKeyGraph, newObj: ObjectKeyMap<string> = {}): ObjectKeyMap<string> {\n  const visit = (child: StateKeyGraph, keyToFind: string): string => {\n    for (const key in child) {\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\n        const parent = visit(child, key);\n        return parent !== null ? `${parent}.${key}` : key;\n      }\n    }\n    return null;\n  };\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      const parent = visit(obj, key);\n      newObj[key] = parent ? `${parent}.${key}` : key;\n    }\n  }\n\n  return newObj;\n}\n\n/**\n * Given a object graph, it will return the items topologically sorted Example:\n *\n *  const graph = {\n *    cart: ['saved'],\n *    saved: ['items'],\n *    items: []\n *  };\n *\n * would return:\n *\n *  const results = [\n *    'items',\n *    'saved',\n *    'cart'\n *  ];\n *\n * @ignore\n */\nexport function topologicalSort(graph: StateKeyGraph): string[] {\n  const sorted: string[] = [];\n  const visited: ObjectKeyMap<boolean> = {};\n\n  const visit = (name: string, ancestors: string[] = []) => {\n    if (!Array.isArray(ancestors)) {\n      ancestors = [];\n    }\n\n    ancestors.push(name);\n    visited[name] = true;\n\n    graph[name].forEach((dep: string) => {\n      if (ancestors.indexOf(dep) >= 0) {\n        throw new Error(`Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`);\n      }\n\n      if (visited[dep]) {\n        return;\n      }\n\n      visit(dep, ancestors.slice(0));\n    });\n\n    if (sorted.indexOf(name) < 0) {\n      sorted.push(name);\n    }\n  };\n\n  Object.keys(graph).forEach(k => visit(k));\n\n  return sorted.reverse();\n}\n\n/**\n * Returns if the parameter is a object or not.\n *\n * @ignore\n */\nexport function isObject(obj) {\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
